// Shared item page logic (extracted from inline template)
// Expects global ITEM_DATA already defined in the HTML before this script is loaded.
(function(){
    const elApp = document.getElementById('app');
    const elItemName = document.getElementById('itemName');
    const elItemSubtitle = document.getElementById('itemSubtitle');
    const elSummaryCards = document.getElementById('summaryCards');
    const elLowBanner = document.getElementById('lowVolumeBanner');
    const elLowDetails = document.getElementById('lowVolDetails');
    const chartsSection = document.getElementById('charts');
    const priceChart = document.getElementById('priceChart');
    const volumeChart = document.getElementById('volumeChart');
    const priceTfLabel = document.getElementById('priceTfLabel');
    const volumeTfLabel = document.getElementById('volumeTfLabel');
    const priceChartNote = document.getElementById('priceChartNote');
    const volumeChartNote = document.getElementById('volumeChartNote');
    const priceTooltip = document.getElementById('priceTooltip');
    const volumeTooltip = document.getElementById('volumeTooltip');
    const priceWrap = document.getElementById('priceChartWrap');
    const volumeWrap = document.getElementById('volumeChartWrap');

    const TF_ORDER = ['1d','7d','30d','90d','1y'];
    const timeframes = (ITEM_DATA && ITEM_DATA.timeframes) || {};
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const PALETTE = prefersDark ? {grid:'#294153',text:'#cbd6df',line:'#4ea2ff',bar:'#2d82da',bg:'#16232f'} : {grid:'#d8e2eb',text:'#2b3a46',line:'#1664d9',bar:'#388ff7',bg:'#ffffff'};
    const CHART_LAYOUT = {line:{padLeft:50,padRight:10,padTop:20,padBottom:28},bar:{padLeft:50,padRight:10,padTop:10,padBottom:28}};

    let currentPriceTf = pickFirstExisting(['1d','24h','7d','30d','90d','1y']);
    let currentVolumeTf = currentPriceTf;
    let highlightPriceIndex = null;
    let highlightVolumeIndex = null;

    function pickFirstExisting(list){for(const tf of list){const norm=normalizeTf(tf);const d=timeframes[norm];if(d&&((d.prices&&d.prices.length)||(d.volumes&&d.volumes.length)))return norm;}return '1d';}
    function normalizeTf(tf){return tf==='24h'?'1d':tf;}
    function fmt(n,dpAuto=true){if(n==null)return '-';if(typeof n==='number')return n.toLocaleString(undefined,{maximumFractionDigits:(dpAuto?(Number.isInteger(n)?0:2):2)});return String(n);}
    function fmtTime(iso){if(!iso)return '-';return iso.replace('T',' ').replace('Z',' UTC');}
    function labelFor(ts,tf){if(!ts||typeof ts!=='number')return '';const d=new Date(ts);switch(tf){case '1d':return d.getHours()+':00';case '7d':return d.toLocaleDateString(undefined,{weekday:'short'});case '30d':case '90d':return (d.getMonth()+1)+'/'+d.getDate();case '1y':return d.toLocaleDateString(undefined,{month:'short'});default:return d.toLocaleDateString();}}
    function hasChartData(){return TF_ORDER.some(tf=>{const d=timeframes[tf];return d&&d.prices&&d.prices.length;});}
    function hasVolumeData(){return TF_ORDER.some(tf=>{const d=timeframes[tf];return d&&d.volumes&&d.volumes.length;});}

    function buildCard(title,primary,pairs){if(primary==null||primary==='-')primary='-';return `<div class="card compact"><div class="label">${title}</div><div class="metric">${primary}</div>`+ (pairs&&pairs.length?`<div class='separator'></div>${pairs.map(p=>`<div class='inline-pair'><span>${p[0]}</span><span>${p[1]}</span></div>`).join('')}`:'')+`</div>`;}
    function renderSummary(){const stats24=ITEM_DATA.stats24h||null;const lastSold=ITEM_DATA.lastSoldPrice??(stats24&&stats24.lastPrice)??null;const cards=[];if(lastSold!=null||(stats24&&(stats24.min!=null||stats24.max!=null))){cards.push(buildCard('Last Sold Price',fmt(lastSold),[['24h Min',fmt(stats24&&stats24.min)],['24h Max',fmt(stats24&&stats24.max)]]));}if(stats24){cards.push(buildCard('24h Stats',fmt(stats24.avg),[['Median',fmt(stats24.median)],['Volume',fmt(stats24.volume)],['Trades',fmt(stats24.trades)]]));if(typeof stats24.trades==='number'&&stats24.trades<(ITEM_DATA.lowVolumeThreshold??5)){elLowBanner.style.display='block';elLowDetails.textContent=`Trades last 24h: ${stats24.trades}`;}}const co=ITEM_DATA.currentOffers;if(co&&(co.avg!=null||co.min!=null)){cards.push(buildCard('Current Offers',fmt(co.avg),[['Median',fmt(co.median)],['Lowest',fmt(co.min)],['Highest',fmt(co.max)]]));}if(stats24&&(stats24.lastSellOfferTime||stats24.lastBuyOfferTime)){cards.push(buildCard('Last Offer Times','â€”',[['Last Sell',fmtTime(stats24.lastSellOfferTime||'-')],['Last Buy',fmtTime(stats24.lastBuyOfferTime||'-')]]));}if(stats24&&stats24.volume!=null){cards.push(buildCard('Daily Volume',fmt(stats24.volume),[['Avg Price',fmt(stats24.avg)],['Median',fmt(stats24.median)]]));}elSummaryCards.innerHTML=cards.join('');}

    function prepareCanvas(canvas){const rect=canvas.getBoundingClientRect();const dpr=window.devicePixelRatio||1;const cssW=rect.width;const cssH=rect.height;const targetW=Math.round(cssW*dpr),targetH=Math.round(cssH*dpr);if(canvas.width!==targetW||canvas.height!==targetH){canvas.width=targetW;canvas.height=targetH;}const ctx=canvas.getContext('2d');ctx.setTransform(dpr,0,0,dpr,0,0);return {ctx,w:cssW,h:cssH};}
    function drawAxes(ctx,w,h,layout,pal){ctx.strokeStyle=pal.grid;ctx.lineWidth=1;ctx.beginPath();ctx.moveTo(layout.padLeft,layout.padTop-5);ctx.lineTo(layout.padLeft,h-layout.padBottom+5);ctx.moveTo(layout.padLeft-5,h-layout.padBottom);ctx.lineTo(w-layout.padRight+2,h-layout.padBottom);ctx.stroke();}

    function drawLineChart(canvas,data){const {ctx,w,h}=prepareCanvas(canvas);const {padLeft,padRight,padTop,padBottom}=CHART_LAYOUT.line;ctx.clearRect(0,0,w,h);ctx.font='11px system-ui';ctx.fillStyle=PALETTE.text;if(!data||!data.prices||!data.prices.length){ctx.fillText('No data',padLeft,padTop+10);return;}const prices=data.prices,ts=data.timestamps||prices.map((_,i)=>i),n=prices.length,single=n===1;const minP=Math.min(...prices),maxP=Math.max(...prices),range=(maxP-minP)||1;for(let i=0;i<=5;i++){const y=padTop+(h-padTop-padBottom)*(i/5);ctx.strokeStyle=PALETTE.grid;ctx.beginPath();ctx.moveTo(padLeft,y);ctx.lineTo(w-padRight,y);ctx.stroke();const val=maxP-range*(i/5);ctx.fillStyle=PALETTE.text;ctx.textAlign='left';ctx.fillText(fmt(val,false),4,y+4);}ctx.textAlign='center';if(single){const xC=padLeft+(w-padLeft-padRight)/2;ctx.fillText(labelFor(ts[0],currentPriceTf),xC,h-8);}else{[0,Math.floor(n/2),n-1].forEach(idx=>{const frac=idx/(n-1);const x=padLeft+(w-padLeft-padRight)*frac;ctx.fillText(labelFor(ts[idx],currentPriceTf),x,h-8);});}drawAxes(ctx,w,h,CHART_LAYOUT.line,PALETTE);if(!single){ctx.beginPath();ctx.lineWidth=2;ctx.strokeStyle=PALETTE.line;prices.forEach((p,i)=>{const frac=i/(n-1);const x=padLeft+(w-padLeft-padRight)*frac;const y=padTop+(h-padTop-padBottom)*(1-(p-minP)/range);if(i===0)ctx.moveTo(x,y);else ctx.lineTo(x,y);});ctx.stroke();}const hi=(highlightPriceIndex!=null&&highlightPriceIndex<n)?highlightPriceIndex:n-1;const frac=single?0.5:(n>1?hi/(n-1):0.5);const px=padLeft+(w-padLeft-padRight)*frac;const py=padTop+(h-padTop-padBottom)*(1-(prices[hi]-minP)/range);ctx.fillStyle=PALETTE.line;ctx.beginPath();ctx.arc(px,py,single?6:5,0,Math.PI*2);ctx.fill();ctx.strokeStyle=PALETTE.bg;ctx.lineWidth=2;ctx.beginPath();ctx.arc(px,py,single?6:5,0,Math.PI*2);ctx.stroke();if(single){ctx.textAlign='left';ctx.fillStyle=PALETTE.text;ctx.fillText(`Value: ${fmt(prices[0])}`,padLeft+6,padTop+14);}}
    function drawBarChart(canvas,data){const {ctx,w,h}=prepareCanvas(canvas);const {padLeft,padRight,padTop,padBottom}=CHART_LAYOUT.bar;ctx.clearRect(0,0,w,h);ctx.font='11px system-ui';ctx.fillStyle=PALETTE.text;if(!data||!data.volumes||!data.volumes.length){ctx.fillText('No data',padLeft,padTop+10);return;}const vols=data.volumes,ts=data.timestamps||vols.map((_,i)=>i),n=vols.length,single=n===1;const maxV=Math.max(...vols)||1;for(let i=0;i<=4;i++){const y=padTop+(h-padTop-padBottom)*(i/4);ctx.strokeStyle=PALETTE.grid;ctx.beginPath();ctx.moveTo(padLeft,y);ctx.lineTo(w-padRight,y);ctx.stroke();const val=Math.round(maxV-maxV*(i/4));ctx.textAlign='left';ctx.fillStyle=PALETTE.text;ctx.fillText(val,4,y+4);}ctx.textAlign='center';if(single){const xc=padLeft+(w-padLeft-padRight)/2;ctx.fillText(labelFor(ts[0],currentVolumeTf),xc,h-8);}else{[0,Math.floor(n/2),n-1].forEach(idx=>{const frac=idx/(n-1);const x=padLeft+(w-padLeft-padRight)*frac;ctx.fillText(labelFor(ts[idx],currentVolumeTf),x,h-8);});}drawAxes(ctx,w,h,CHART_LAYOUT.bar,PALETTE);const availW=w-padLeft-padRight;const barW=single?Math.min(60,availW*0.25):Math.max(2,(availW/n)*0.6);vols.forEach((v,i)=>{const frac=single?0.5:i/(n-1||1);const xCenter=padLeft+(w-padLeft-padRight)*frac;const hScale=v/maxV;const barH=(h-padTop-padBottom)*hScale;const y=padTop+(h-padTop-padBottom-barH);const x=xCenter-barW/2;ctx.fillStyle=(highlightVolumeIndex===i)?PALETTE.line:PALETTE.bar;ctx.fillRect(x,y,barW,barH);if(single){ctx.textAlign='left';ctx.fillStyle=PALETTE.text;ctx.fillText(`Vol: ${fmt(v)}`,padLeft+6,padTop+14);}});if(highlightVolumeIndex!=null&&highlightVolumeIndex<n){const i=highlightVolumeIndex;const v=vols[i];const frac=single?0.5:i/(n-1||1);const xc=padLeft+(w-padLeft-padRight)*frac;const hScale=v/maxV;const barH=(h-padTop-padBottom)*hScale;const y=padTop+(h-padTop-padBottom-barH);const x=xc-barW/2;ctx.strokeStyle=PALETTE.line;ctx.lineWidth=2;ctx.strokeRect(x-1,y-1,barW+2,barH+2);}}

    function renderCharts(){if(!hasChartData()&&!hasVolumeData()){chartsSection.style.display='none';return;}chartsSection.style.display='block';drawLineChart(priceChart,timeframes[currentPriceTf]);drawBarChart(volumeChart,timeframes[currentVolumeTf]);priceTfLabel.textContent=currentPriceTf;volumeTfLabel.textContent=currentVolumeTf;const p=timeframes[currentPriceTf];const v=timeframes[currentVolumeTf];priceChartNote.textContent=!p||!p.prices||!p.prices.length?'No data':(p.prices.length===1?'Only 1 point':`Points: ${p.prices.length}`);volumeChartNote.textContent=!v||!v.volumes||!v.volumes.length?'No data':(v.volumes.length===1?'Only 1 bar':`Bars: ${v.volumes.length}`);}

    function enableInteraction(){if(!hasChartData()&&!hasVolumeData())return;function handler(kind){const isPrice=kind==='price';const canvas=isPrice?priceChart:volumeChart;return function(ev){const tf=isPrice?currentPriceTf:currentVolumeTf;const data=timeframes[tf];if(!data)return;const series=isPrice?(data.prices||[]):(data.volumes||[]);const n=series.length;if(!n)return;const rect=canvas.getBoundingClientRect();const layout=isPrice?CHART_LAYOUT.line:CHART_LAYOUT.bar;const usable=rect.width-layout.padLeft-layout.padRight;let idx=0;if(n>1&&usable>1){const x=ev.clientX-rect.left;const clamped=Math.min(Math.max(x-layout.padLeft,0),usable);idx=Math.min(n-1,Math.max(0,Math.round((clamped/usable)*(n-1))));}if(isPrice)highlightPriceIndex=idx;else highlightVolumeIndex=idx;renderCharts();const tip=isPrice?priceTooltip:volumeTooltip;const ts=data.timestamps&&data.timestamps[idx];tip.innerHTML=isPrice?`<strong>${fmt(series[idx])}</strong><br><span style='opacity:.75'>${ts?fmtTime(new Date(ts).toISOString()):''}</span>`:`<strong>Vol ${fmt(series[idx])}</strong><br><span style='opacity:.75'>${ts?fmtTime(new Date(ts).toISOString()):''}</span>`;tip.hidden=false;const wrap=isPrice?priceWrap:volumeWrap;const wrect=wrap.getBoundingClientRect();let tx=ev.clientX-wrect.left;let ty=ev.clientY-wrect.top-8;if(tx<40)tx=40;else if(tx>wrect.width-40)tx=wrect.width-40;if(ty<32)ty=32;tip.style.left=tx+'px';tip.style.top=ty+'px';};}
        function attach(c,kind){const mv=handler(kind);c.addEventListener('pointerdown',e=>{c.setPointerCapture(e.pointerId);mv(e);});c.addEventListener('pointermove',e=>{if(c.hasPointerCapture(e.pointerId))mv(e);});['pointerup','pointerleave','pointercancel'].forEach(ev=>c.addEventListener(ev,()=>{if(kind==='price'){highlightPriceIndex=null;priceTooltip.hidden=true;}else{highlightVolumeIndex=null;volumeTooltip.hidden=true;}renderCharts();}));}
        attach(priceChart,'price');attach(volumeChart,'volume');}

    function initTimeframeButtons(){document.querySelectorAll('.timeframe-switch').forEach(group=>{const chart=group.dataset.chart;group.querySelectorAll('button[data-tf]').forEach(btn=>{const tf=normalizeTf(btn.dataset.tf);const has=!!timeframes[tf]&&((timeframes[tf].prices&&timeframes[tf].prices.length)||(timeframes[tf].volumes&&timeframes[tf].volumes.length));if(!has){btn.classList.add('disabled');btn.setAttribute('aria-disabled','true');}btn.addEventListener('click',()=>{if(btn.classList.contains('disabled'))return;if(chart==='price'){currentPriceTf=tf;highlightPriceIndex=null;}else{currentVolumeTf=tf;highlightVolumeIndex=null;}group.querySelectorAll('button').forEach(b=>b.classList.remove('active'));btn.classList.add('active');renderCharts();});});});}

    function prepareAndRender(retry=0){const w1=priceChart.getBoundingClientRect().width;const w2=volumeChart.getBoundingClientRect().width;if((!w1||!w2)&&retry<3){requestAnimationFrame(()=>prepareAndRender(retry+1));return;}prepareCanvas(priceChart);prepareCanvas(volumeChart);renderCharts();enableInteraction();}
    function init(){elItemName.textContent=ITEM_DATA.name||`Item ${ITEM_DATA.itemId}`;elItemSubtitle.textContent=`ID ${ITEM_DATA.itemId}`;renderSummary();initTimeframeButtons();elApp.hidden=false;requestAnimationFrame(()=>prepareAndRender());}

    let resizePending=false;window.addEventListener('resize',()=>{if(resizePending)return;resizePending=true;requestAnimationFrame(()=>{resizePending=false;prepareCanvas(priceChart);prepareCanvas(volumeChart);renderCharts();});});

    if(document.readyState==='loading')document.addEventListener('DOMContentLoaded',init);else init();
})();
